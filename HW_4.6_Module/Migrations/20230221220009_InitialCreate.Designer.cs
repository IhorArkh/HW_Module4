// <auto-generated />
using System;
using HW_4._6_Module;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HW_4._6_Module.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20230221220009_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HW_4._6_Module.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateOfDeath")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Phone")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1975, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "50cent@gmail.com",
                            InstagramUrl = "www.instagram.com/50cent/",
                            Name = "50 Cent"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1981, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Beyonce"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1981, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Akon"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1972, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Eminem"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1938, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfDeath = new DateTime(1972, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Li Morgan"
                        });
                });

            modelBuilder.Entity("HW_4._6_Module.Models.ArtistSong", b =>
                {
                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("ArtistId", "SongId");

                    b.HasIndex("SongId");

                    b.ToTable("ArtistSongs");

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            SongId = 1
                        },
                        new
                        {
                            ArtistId = 1,
                            SongId = 2
                        },
                        new
                        {
                            ArtistId = 2,
                            SongId = 3
                        },
                        new
                        {
                            ArtistId = 3,
                            SongId = 4
                        },
                        new
                        {
                            ArtistId = 4,
                            SongId = 4
                        },
                        new
                        {
                            ArtistId = 5,
                            SongId = 5
                        });
                });

            modelBuilder.Entity("HW_4._6_Module.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Hip Hop"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Rock"
                        },
                        new
                        {
                            Id = 3,
                            Title = "R&B"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Jazz"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Disco"
                        });
                });

            modelBuilder.Entity("HW_4._6_Module.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RealeasedDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = "3:12",
                            GenreId = 1,
                            RealeasedDate = new DateTime(2005, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Candy Shop"
                        },
                        new
                        {
                            Id = 2,
                            Duration = "3:25",
                            GenreId = 1,
                            RealeasedDate = new DateTime(2003, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "In Da Club"
                        },
                        new
                        {
                            Id = 3,
                            Duration = "3:45",
                            GenreId = 3,
                            RealeasedDate = new DateTime(2022, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "CUFF IT"
                        },
                        new
                        {
                            Id = 4,
                            Duration = "3:31",
                            GenreId = 1,
                            RealeasedDate = new DateTime(2006, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Smack That"
                        },
                        new
                        {
                            Id = 5,
                            Duration = "6:23",
                            GenreId = 4,
                            RealeasedDate = new DateTime(1967, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Ceora"
                        });
                });

            modelBuilder.Entity("HW_4._6_Module.Models.ArtistSong", b =>
                {
                    b.HasOne("HW_4._6_Module.Models.Artist", "Artist")
                        .WithMany("ArtistSongs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HW_4._6_Module.Models.Song", "Song")
                        .WithMany("ArtistSongs")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("HW_4._6_Module.Models.Song", b =>
                {
                    b.HasOne("HW_4._6_Module.Models.Genre", "Genre")
                        .WithMany("Songs")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("HW_4._6_Module.Models.Artist", b =>
                {
                    b.Navigation("ArtistSongs");
                });

            modelBuilder.Entity("HW_4._6_Module.Models.Genre", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("HW_4._6_Module.Models.Song", b =>
                {
                    b.Navigation("ArtistSongs");
                });
#pragma warning restore 612, 618
        }
    }
}
